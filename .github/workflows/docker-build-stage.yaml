name: Docker images
on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Go Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Docker Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta for API Server
        id: meta_api_server
        uses: docker/metadata-action@v3
        with:
          images: kubeshop/testkube-api-server
          tags: |
            type=sha

      - name: Get tag version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Step
        id: github_sha
        run: echo "::set-output name=sha_short::${GITHUB_SHA::7}"

      - name: Build API Server
        uses: docker/bake-action@v1
        with:
          files: |
            build/api-server/docker-bake.hcl
            ${{ steps.meta_api_server.outputs.bake-file }}
          targets: build
          set: |
            build.args.TOKEN=${{ secrets.CI_BOT_TOKEN }}
            build.args.VERSION=${{ steps.vars.outputs.tag }}
            build.args.COMMIT=${{ github.sha }}
            build.args.ANALYTICS_TRACKING_ID=${{secrets.TESTKUBE_API_GA_MEASUREMENT_ID}}
            build.args.ANALYTICS_API_KEY=${{secrets.TESTKUBE_API_GA_MEASUREMENT_SECRET}}
            build.args.SEGMENTIO_KEY=${{secrets.TESTKUBE_API_SEGMENTIO_KEY}}
          push: true

      #Trigger Helm repo workflow to deploy API to GKE Stage cluster
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}
          repository: kubeshop/helm-charts
          event-type: trigger-workflow
          client-payload: '{"image_tag": "sha-${{ steps.github_sha.outputs.sha_short }}"}'
